{"version":3,"sources":["actions/index.js","App.js","reportWebVitals.js","reducers/break.js","reducers/session.js","reducers/index.js","index.js"],"names":["tickBreak","type","setBreak","nr","payload","toggleBreak","BreakTimer","breakTimer","useSelector","state","break","time","className","id","SessionTimer","sessionTimer","session","TimerControls","props","dispatch","useDispatch","isRunning","startPauseButton","stopTimer","onClick","resetTimer","startTimer","increaseBreak","increaseSession","App","tick","bind","this","interval","clearInterval","setInterval","React","Component","connect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","breakReducer","action","sessionReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33fb08d.chunk.js","sourcesContent":["export const increaseBreak = (nr=1) => {\r\n    return{\r\n        type: 'INCREASE_BREAK',\r\n        payload: nr, \r\n    }\r\n}\r\n\r\nexport const increaseSession = (nr=1) => {\r\n    return{\r\n        type: 'INCREASE_SESSION',\r\n        payload: nr,\r\n    }\r\n}\r\n\r\nexport const tickBreak = () => {\r\n    return{\r\n        type: 'TICK_BREAK'\r\n    }\r\n}\r\n\r\nexport const tickSession = () => {\r\n    return {\r\n        type: 'TICK_SESSION',\r\n    }\r\n\r\n}\r\n\r\nexport const setBreak = (nr=5) => {\r\n    return{\r\n        type: 'SET_BREAK',\r\n        payload: nr,\r\n    }\r\n}\r\n\r\nexport const toggleBreak = () => {\r\n    return{\r\n        type: 'TOGGLE_BREAK',\r\n    }\r\n}","import React from 'react'\nimport './App.css';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n  increaseBreak, \n  increaseSession,\n  tickBreak,\n  tickSession,\n  setBreak,\n  toggleBreak,\n  } from './actions/index.js';\nimport {connect} from 'react-redux'\n\nconst BreakTimer = () => {\n  const breakTimer = useSelector(state => state.break.time); \n  return(\n      <div className=\"break-timer-container\">\n        <div id=\"break-timer-label\">Break</div>\n        <div id=\"break-timer\">{breakTimer}</div>\n      </div>\n  );\n}\n\nconst SessionTimer = () => {\n  const sessionTimer = useSelector(state => state.session);\n  return(  \n    <div id=\"session-timer-container\">\n      <div id=\"session-timer-label\">Session</div>\n      <div id=\"session-timer\">{sessionTimer}</div>      \n    </div>\n  );\n}\n\nconst TimerControls = (props) =>{\n  const dispatch = useDispatch();\n  const breakTimer = useSelector(state => state.break.time);\n  const isRunning = useSelector(state => state.break.isRunning);\n  let startPauseButton = <button></button>;\n\n  if (breakTimer < 0){\n    props.stopTimer();\n    dispatch(setBreak(0));\n  }else if(breakTimer === 0){\n    startPauseButton = <button id=\"start-pause-button\" onClick={props.resetTimer}>Reset</button>;  \n\n  }else{\n    startPauseButton = isRunning ? \n      <button id=\"start-pause-button\" onClick={props.stopTimer}>Pause</button> :\n      <button id=\"start-pause-button\" onClick={props.startTimer}>Start</button>;   \n\n  }\n  \n\n  return(\n        <div className=\"timer-buttons-container\">\n          <button id=\"session-decrement\">-</button>\n          <button id=\"break-decrement\">-</button>\n          <button onClick={() => dispatch(increaseBreak())} id=\"break-increment\">+</button>\n          <button onClick={() => dispatch(increaseSession())} id=\"session-increment\">+</button>\n          {startPauseButton}\n        </div>\n    )\n}\n\n\nconst INTERVAL_LENGTH = 1000 //in ms\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  componentWillUnmount(){\n    if(!this.interval) return;\n    clearInterval(this.interval);\n  }\n\n  startTimer(){\n    this.interval = setInterval(this.tick, INTERVAL_LENGTH);\n    this.props.toggleBreak();\n  }\n\n  tick(){\n    this.props.tickBreak();\n  }\n\n  stopTimer(){\n    clearInterval(this.interval);\n    this.props.toggleBreak();\n  }\n\n  resetTimer(){\n    this.props.setBreak(5);\n  }\n\n  render(){\n    return(\n      <div>\n        <BreakTimer />\n        {/* Session Timer */}\n        <SessionTimer />\n        <TimerControls startTimer={this.startTimer} stopTimer={this.stopTimer} resetTimer={this.resetTimer}/>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  break: state.break\n});\n\nconst mapDispatchToProps = () => ({\n  tickBreak,\n  setBreak,\n  toggleBreak,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps()\n)(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const breakReducer = (state = {time:5, isRunning:false}, action) => {\r\n    switch(action.type){\r\n        case 'INCREASE_BREAK':\r\n            return {\r\n                ...state, \r\n                time: state.time + action.payload};\r\n        case 'DECREASE':\r\n            return{\r\n            ...state, \r\n            time: state.time - action.payload};\r\n        case 'TICK_BREAK':\r\n            return{\r\n            ...state, \r\n            time: state.time - 1};\r\n        case 'SET_BREAK':\r\n            return{\r\n                ...state, \r\n                time: action.payload};\r\n        case 'TOGGLE_BREAK':\r\n            return{\r\n                ...state, \r\n                isRunning: !state.isRunning};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default breakReducer; \r\n","const sessionReducer = (state = 25, action) => {\r\n    switch(action.type){\r\n        case 'INCREASE_SESSION':\r\n            return state + action.payload;\r\n        case 'DECREASE':\r\n            return state -1;\r\n        case 'TICK_SESSION':\r\n            return state -1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default sessionReducer;","import { combineReducers } from \"redux\"\r\nimport breakReducer from \"./break\"\r\nimport sessionReducer from \"./session\"\r\n\r\nconst rootReducer = combineReducers({\r\n    break: breakReducer, \r\n    session: sessionReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux';\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}